package parsing

import (
	"os"
	"strings"

	"github.com/zperf/tcpmon/tcpmon/gproto"
	"github.com/zperf/tcpmon/tcpmon/parsing"
)

func (s *ParsingTestSuite) TestParseNetstat() {
	buf, err := os.ReadFile("netstat.txt")
	s.Require().NoError(err)

	netstat := string(buf)
	var m gproto.NetstatMetric
	err = parsing.ParseNetstat(strings.NewReader(netstat), &m)
	s.Require().NoError(err)

	s.Require().Equal(uint64(0), m.TcpSyncookiesSent)
	s.Require().Equal(uint64(0), m.TcpSyncookiesRecv)
	s.Require().Equal(uint64(0), m.TcpSyncookiesFailed)
	s.Require().Equal(uint64(0), m.TcpEmbryonicRsts)
	s.Require().Equal(uint64(0), m.TcpPruneCalled)
	s.Require().Equal(uint64(0), m.TcpRcvPruned)
	s.Require().Equal(uint64(0), m.TcpOfoPruned)
	s.Require().Equal(uint64(0), m.TcpOutOfWindowIcmps)
	s.Require().Equal(uint64(0), m.TcpLockDroppedIcmps)
	s.Require().Equal(uint64(0), m.TcpArpFilter)
	s.Require().Equal(uint64(265), m.TcpTw)
	s.Require().Equal(uint64(0), m.TcpTwRecycled)
	s.Require().Equal(uint64(0), m.TcpTwKilled)
	s.Require().Equal(uint64(0), m.TcpPawsActive)
	s.Require().Equal(uint64(4), m.TcpPawsEstab)
	s.Require().Equal(uint64(5003), m.TcpDelayedAcks)
	s.Require().Equal(uint64(1), m.TcpDelayedAckLocked)
	s.Require().Equal(uint64(209), m.TcpDelayedAckLost)
	s.Require().Equal(uint64(0), m.TcpListenOverflows)
	s.Require().Equal(uint64(0), m.TcpListenDrops)
	s.Require().Equal(uint64(31177), m.TcpHpHits)
	s.Require().Equal(uint64(52196), m.TcpPureAcks)
	s.Require().Equal(uint64(55608), m.TcpHpAcks)
	s.Require().Equal(uint64(0), m.TcpRenoRecovery)
	s.Require().Equal(uint64(0), m.TcpSackRecovery)
	s.Require().Equal(uint64(0), m.TcpSackReneging)
	s.Require().Equal(uint64(230), m.TcpSackReorder)
	s.Require().Equal(uint64(0), m.TcpRenoReorder)
	s.Require().Equal(uint64(0), m.TcpTsReorder)
	s.Require().Equal(uint64(0), m.TcpFullUndo)
	s.Require().Equal(uint64(0), m.TcpPartialUndo)
	s.Require().Equal(uint64(5), m.TcpDsackUndo)
	s.Require().Equal(uint64(32), m.TcpLossUndo)
	s.Require().Equal(uint64(900), m.TcpLostRetransmit)
	s.Require().Equal(uint64(0), m.TcpRenoFailures)
	s.Require().Equal(uint64(2), m.TcpSackFailures)
	s.Require().Equal(uint64(0), m.TcpLossFailures)
	s.Require().Equal(uint64(0), m.TcpFastRetrans)
	s.Require().Equal(uint64(0), m.TcpSlowStartRetrans)
	s.Require().Equal(uint64(1173), m.TcpTimeouts)
	s.Require().Equal(uint64(387), m.TcpLossProbes)
	s.Require().Equal(uint64(28), m.TcpLossProbeRecovery)
	s.Require().Equal(uint64(0), m.TcpRenoRecoveryFail)
	s.Require().Equal(uint64(0), m.TcpSackRecoveryFail)
	s.Require().Equal(uint64(0), m.TcpRcvCollapsed)
	s.Require().Equal(uint64(981), m.TcpBacklogCoalesce)
	s.Require().Equal(uint64(211), m.TcpDsackOldSent)
	s.Require().Equal(uint64(2), m.TcpDsackOfoSent)
	s.Require().Equal(uint64(209), m.TcpDsackRecv)
	s.Require().Equal(uint64(1), m.TcpDsackOfoRecv)
	s.Require().Equal(uint64(57), m.TcpAbortOnData)
	s.Require().Equal(uint64(4), m.TcpAbortOnClose)
	s.Require().Equal(uint64(0), m.TcpAbortOnMemory)
	s.Require().Equal(uint64(36), m.TcpAbortOnTimeout)
	s.Require().Equal(uint64(0), m.TcpAbortOnLinger)
	s.Require().Equal(uint64(0), m.TcpAbortFailed)
	s.Require().Equal(uint64(0), m.TcpMemoryPressures)
	s.Require().Equal(uint64(0), m.TcpMemoryPressuresChrono)
	s.Require().Equal(uint64(0), m.TcpSackDiscard)
	s.Require().Equal(uint64(0), m.TcpDsackIgnoredOld)
	s.Require().Equal(uint64(136), m.TcpDsackIgnoredNoUndo)
	s.Require().Equal(uint64(0), m.TcpSpuriousRtos)
	s.Require().Equal(uint64(0), m.TcpMd5NotFound)
	s.Require().Equal(uint64(0), m.TcpMd5Unexpected)
	s.Require().Equal(uint64(0), m.TcpMd5Failure)
	s.Require().Equal(uint64(6), m.TcpSackShifted)
	s.Require().Equal(uint64(1), m.TcpSackMerged)
	s.Require().Equal(uint64(364), m.TcpSackShiftFallback)
	s.Require().Equal(uint64(0), m.TcpBacklogDrop)
	s.Require().Equal(uint64(0), m.TcpPfMemallocDrop)
	s.Require().Equal(uint64(0), m.TcpMinTtlDrop)
	s.Require().Equal(uint64(0), m.TcpDeferAcceptDrop)
	s.Require().Equal(uint64(0), m.TcpIpReversePathFilter)
	s.Require().Equal(uint64(0), m.TcpTimeWaitOverflow)
	s.Require().Equal(uint64(0), m.TcpReqQFullDoCookies)
	s.Require().Equal(uint64(0), m.TcpReqQFullDrop)
	s.Require().Equal(uint64(0), m.TcpRetransFail)
	s.Require().Equal(uint64(67148), m.TcpRcvCoalesce)
	s.Require().Equal(uint64(13902), m.TcpOfoQueue)
	s.Require().Equal(uint64(0), m.TcpOfoDrop)
	s.Require().Equal(uint64(2), m.TcpOfoMerge)
	s.Require().Equal(uint64(19), m.TcpChallengeAck)
	s.Require().Equal(uint64(19), m.TcpSynChallenge)
	s.Require().Equal(uint64(0), m.TcpFastOpenActive)
	s.Require().Equal(uint64(0), m.TcpFastOpenActiveFail)
	s.Require().Equal(uint64(0), m.TcpFastOpenPassive)
	s.Require().Equal(uint64(0), m.TcpFastOpenPassiveFail)
	s.Require().Equal(uint64(0), m.TcpFastOpenListenOverflow)
	s.Require().Equal(uint64(0), m.TcpFastOpenCookieReqd)
	s.Require().Equal(uint64(0), m.TcpFastOpenBlackhole)
	s.Require().Equal(uint64(0), m.TcpSpuriousRtxHostQueues)
	s.Require().Equal(uint64(0), m.TcpBusyPollRxPackets)
	s.Require().Equal(uint64(234), m.TcpAutoCorking)
	s.Require().Equal(uint64(0), m.TcpFromZeroWindowAdv)
	s.Require().Equal(uint64(0), m.TcpToZeroWindowAdv)
	s.Require().Equal(uint64(0), m.TcpWantZeroWindowAdv)
	s.Require().Equal(uint64(1031), m.TcpSynRetrans)
	s.Require().Equal(uint64(172433), m.TcpOrigDataSent)
	s.Require().Equal(uint64(5), m.TcpHystartTrainDetect)
	s.Require().Equal(uint64(143), m.TcpHystartTrainCwnd)
	s.Require().Equal(uint64(2), m.TcpHystartDelayDetect)
	s.Require().Equal(uint64(123), m.TcpHystartDelayCwnd)
	s.Require().Equal(uint64(4), m.TcpAckSkippedSynRecv)
	s.Require().Equal(uint64(2), m.TcpAckSkippedPaws)
	s.Require().Equal(uint64(0), m.TcpAckSkippedSeq)
	s.Require().Equal(uint64(0), m.TcpAckSkippedFinWait2)
	s.Require().Equal(uint64(0), m.TcpAckSkippedTimeWait)
	s.Require().Equal(uint64(0), m.TcpAckSkippedChallenge)
	s.Require().Equal(uint64(0), m.TcpWinProbe)
	s.Require().Equal(uint64(557), m.TcpKeepAlive)
	s.Require().Equal(uint64(0), m.TcpMtupFail)
	s.Require().Equal(uint64(0), m.TcpMtupSuccess)
	s.Require().Equal(uint64(173099), m.TcpDelivered)
	s.Require().Equal(uint64(0), m.TcpDeliveredCe)
	s.Require().Equal(uint64(10850), m.TcpAckCompressed)
	s.Require().Equal(uint64(0), m.TcpZeroWindowDrop)
	s.Require().Equal(uint64(0), m.TcpRcvQDrop)
	s.Require().Equal(uint64(0), m.TcpWqueueTooBig)
	s.Require().Equal(uint64(0), m.TcpFastOpenPassiveAltKey)
	s.Require().Equal(uint64(1137), m.TcpTimeoutRehash)
	s.Require().Equal(uint64(38), m.TcpDuplicateDataRehash)
	s.Require().Equal(uint64(210), m.TcpDsackRecvSegs)
	s.Require().Equal(uint64(0), m.TcpDsackIgnoredDubious)
	s.Require().Equal(uint64(0), m.TcpMigrateReqSuccess)
	s.Require().Equal(uint64(0), m.TcpMigrateReqFailure)
	s.Require().Equal(uint64(0), m.TcpPlbRehash)
	s.Require().Equal(uint64(0), m.IpInNoRoutes)
	s.Require().Equal(uint64(0), m.IpInTruncatedPkts)
	s.Require().Equal(uint64(2), m.IpInMcastPkts)
	s.Require().Equal(uint64(62), m.IpOutMcastPkts)
	s.Require().Equal(uint64(1006), m.IpInBcastPkts)
	s.Require().Equal(uint64(0), m.IpOutBcastPkts)
	s.Require().Equal(uint64(371835805), m.IpInOctets)
	s.Require().Equal(uint64(261795579), m.IpOutOctets)
	s.Require().Equal(uint64(72), m.IpInMcastOctets)
	s.Require().Equal(uint64(8690), m.IpOutMcastOctets)
	s.Require().Equal(uint64(173820), m.IpInBcastOctets)
	s.Require().Equal(uint64(0), m.IpOutBcastOctets)
	s.Require().Equal(uint64(0), m.IpInCsumErrors)
	s.Require().Equal(uint64(510287), m.IpInNoEctPkts)
	s.Require().Equal(uint64(0), m.IpInEct1Pkts)
	s.Require().Equal(uint64(8938), m.IpInEct0Pkts)
	s.Require().Equal(uint64(0), m.IpInCePkts)
	s.Require().Equal(uint64(0), m.IpReasmOverlaps)
}
